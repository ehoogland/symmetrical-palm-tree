import { createSlice } from '@reduxjs/toolkit';

// Make sure on initial load there is no logged-in user
const initialState = {
	currentUser: null
};
/** 
 * Declare a const named userSlice. 
 * Set its value to the return value from calling the createSlice function.
 * Configuration object (slice options/slice configuration) is passed
 * setCurrentUser has two parameters: state and action
 * @param {Object} state - The current state
 * @param {Object} action - The action object
 * @returns {Object} The new state
 * The return value from setCurrentUser will cause the state to update
 * the currentUser with data contained in the action.payload property
 * obtained from an object based onthe user login form.
*/
const userSlice = createSlice({
	name: 'user',
	initialState,
	reducers: {
		setCurrentUser: (state, action) => {
			return { ...state, currentUser: action.payload };
		}
	}
});

/**
 * Export the action creators generated by createSlice
 * Deconstruct the action creators from the userSlice.actions object
 * and export them by name.
 * 
 * Action creators are functions that return action objects. 
 * They are typically used in components to dispatch actions.
 * They are automatically generated by createSlice and are available 
 * on the slice object.
 * @exports {Function} setCurrentUser
 */
export const { setCurrentUser } = userSlice.actions;

/**
 * Export the reducer function
 * @exports {Function} userReducer
 */
export const userReducer = userSlice.reducer;
/**
 * Selector to get the current user from the state
 * @param {*} state - The Redux state
 * @returns {Object|null} The current user object or null if not logged in
 * @exports {Function} selectCurrentUser
 */
export const selectCurrentUser = (state) => state.user.currentUser;
