import { createSlice } from '@reduxjs/toolkit';
/**
 * @description This slice manages the state of favorite campsites in the application.
 * It allows users to toggle the favorite status of a campsite by adding or removing
 * its ID from the favorites array in the Redux store.
 * @component createSlice - A function from Redux Toolkit that simplifies the process of creating
 * Redux slices, which include action creators and reducers.
 * @property {string} name - The name of the slice, used as a prefix for generated action types. This means that
 * any action types generated by this slice will be prefixed with 'favorites/'.
 * @property {Array} initialState - The initial state of the slice, set to an empty array to hold favorite campsite IDs.
 * @property {Object} reducers - An object containing reducer functions that define how the state can be updated. Reducers
 * are functions that take the current state and an action as arguments and return a new state. They are similar to the
 * iterator function used in the reduce() method in JavaScript.
 * @function toggleFavorite - A reducer function that toggles the favorite status of a campsite.
 * It checks if the campsite ID (provided in action.payload) is already in the favorites array.
 * If it is, the ID is removed; if not, the ID is added to the array.
 * @returns {Object} The favorites slice containing actions and reducer for managing favorite campsites.
 */
const favoritesSlice = createSlice({
  name: 'favorites',
  initialState: [],
  reducers: {
    toggleFavorite: (favorites, action) => {
        if (favorites.includes(action.payload)) {
            return favorites.filter(
                (favorite) => favorite !== action.payload
            );
        } else {
            favorites.push(action.payload);
        }   
    },
  }, // end reducers
}); // end createSlice

export const { toggleFavorite } = favoritesSlice.actions;
export const favoritesReducer = favoritesSlice.reducer;
